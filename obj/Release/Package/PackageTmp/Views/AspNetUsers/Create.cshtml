@model WEBCAM.Context.AspNetUsers

@{
    ViewBag.Title = "Create";
}

<h2>Crear un Usuario</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <div class="margin">
            <div class="btn-group">
                <button type="button" class="btn btn-primary">Acciones de Usuario</button>
                <button type="button" class="btn btn-primary dropdown-toggle dropdown-hover dropdown-icon" data-toggle="dropdown">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu" role="menu">
                    <a class="dropdown-item" href="@Url.Action("Create","Generos", null,null)">Crear Genero</a>
                    <a class="dropdown-item" href="@Url.Action("Create","Ciudades", null,null)">Crear Ciudad</a>
                    <a class="dropdown-item" href="@Url.Action("Create","TiposDocumentos", null,null)">Crear Tipo de Documento</a>

                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EmailConfirmed)
                        @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PhoneNumberConfirmed)
                        @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TwoFactorEnabled)
                        @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.LockoutEnabled)
                        @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <label class="control-label col-md-2">Genero</label>
                <div class="col-md-10">
                    @Html.DropDownList("IdGenero", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdGenero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <label class="control-label col-md-2">
                    Ciudad
                </label>
                <div class="col-md-10">
                    @Html.DropDownList("IdCiudad", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdCiudad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <label class="control-label col-md-6">
                    Tipo Documento
                </label>
                <div class="col-md-10">
                    @Html.DropDownList("IdTipoDocumento", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTipoDocumento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <label class="control-label col-md-6">
                    Numero Identificacion
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NroIdentificacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroIdentificacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label class="control-label col-md-6">
                    Razon Social(Empresas)
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-4">
                <label class="control-label col-md-2">
                    Dirección
                </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-group row">

            <div class="col-md-offset-2 col-md-10">

                <a href="@Url.Action("Index", "AspNetUsers")" class="btn btn-sm btn-dark" title="Regresar">

                    <img src="~/Content/img/ico/streamlinehq-interface-arrows-turn-backward-interface-essential-50.png" height="30" width="30" />
                </a>
                <input type="submit" value="Crear" class="btn btn-outline-success" />
            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/js")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
<script src="@Url.Content("~/Scripts/Global.js")"></script>


@section Scripts
        {
    @Scripts.Render("~/bundles/jqueryval")

}